generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model profile {
  id           String        @id @db.Uuid
  email        String?       @unique
  displayName  String?
  avatarUrl    String?
  posts        post[]
  comments     comment[]
  likedPosts   post[]        @relation(name: "liked_posts")
  subscription subscription?
}

model subscription {
  id                   String             @id @default(uuid()) @db.Uuid
  userId               String             @unique @db.Uuid
  user                 profile            @relation(fields: [userId], references: [id], onDelete: Cascade)
  stripeCustomerId     String?            @unique
  stripeSubscriptionId String?            @unique
  stripePriceId        String?
  status               SubscriptionStatus @default(INACTIVE)
  currentPeriodStart   DateTime?
  currentPeriodEnd     DateTime?
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  INCOMPLETE
  INCOMPLETE_EXPIRED
  PAST_DUE
  TRIALING
  UNPAID
  INACTIVE
}

model post {
  id        String    @id @default(uuid()) @db.Uuid
  title     String
  text      String
  createdAt DateTime  @default(now())
  author    profile   @relation(fields: [authorId], references: [id])
  authorId  String    @db.Uuid
  comments  comment[]
  likedBy   profile[] @relation(name: "liked_posts")
}

model comment {
  id        String   @id @default(uuid()) @db.Uuid
  text      String
  createdAt DateTime @default(now())
  author    profile  @relation(fields: [authorId], references: [id])
  authorId  String   @db.Uuid
  post      post     @relation(fields: [postId], references: [id])
  postId    String   @db.Uuid
}
